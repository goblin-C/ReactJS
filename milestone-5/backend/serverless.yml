service: image-url-service
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-south-1
  environment:
    BUCKET_NAME: product-assets-1
    USER_POOL_ID: !Ref CognitoUserPool
    USER_POOL_CLIENT_ID: !Ref CognitoUserPoolClient
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:PutObject
          Resource: arn:aws:s3:::product-assets-1/products/*
        - Effect: Allow
          Action:
            - cognito-idp:AdminInitiateAuth
            - cognito-idp:AdminCreateUser
            - cognito-idp:AdminSetUserPassword
          Resource: !GetAtt CognitoUserPool.Arn

functions:
  uploadImage:
    handler: handler.uploadImage
    events:
      - http:
          path: /upload
          method: post
          cors: true

resources:
  Resources:
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:service}-user-pool-${sls:stage}
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireUppercase: true
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: false
        Schema:
          - Name: email
            AttributeDataType: String
            Required: true
            Mutable: true
          - Name: name
            AttributeDataType: String
            Required: true
            Mutable: true
        UserPoolTags:
          Environment: ${sls:stage}
          Service: ${self:service}

    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:service}-user-pool-client-${sls:stage}
        UserPoolId: !Ref CognitoUserPool
        GenerateSecret: false
        ExplicitAuthFlows:
          - ADMIN_NO_SRP_AUTH
          - USER_PASSWORD_AUTH
        SupportedIdentityProviders:
          - COGNITO
        CallbackURLs:
          - http://localhost:5173/
        LogoutURLs:
          - http://localhost:5173/
        AllowedOAuthFlows:
          - code
        AllowedOAuthScopes:
          - email
          - openid
          - profile
        AllowedOAuthFlowsUserPoolClient: true

  Outputs:
    CognitoUserPoolId:
      Description: ID of the Cognito User Pool
      Value: !Ref CognitoUserPool
      Export:
        Name: ${self:service}-user-pool-id-${sls:stage}
    
    CognitoUserPoolClientId:
      Description: ID of the Cognito User Pool Client
      Value: !Ref CognitoUserPoolClient
      Export:
        Name: ${self:service}-user-pool-client-id-${sls:stage}
    
    CognitoUserPoolArn:
      Description: ARN of the Cognito User Pool
      Value: !GetAtt CognitoUserPool.Arn
      Export:
        Name: ${self:service}-user-pool-arn-${sls:stage}